Domain: ../../problem/ipc2002/Tests1/ZenoTravel/Numeric/zenonumeric.pddl
Problem: ../../problem/ipc2002/Tests1/ZenoTravel/Numeric/pfile1
Using Planning Graph: Yes
Algorithm: Simple Algorithm
Before filtering: 10
After filtering: 10
nSignificantTimePoint: 1
solving ...
end solving
constructing NGP
New Actions: 5
Old Actions: 0
Atoms: 2
[(fuel plane1)]
0
[(onboard plane1)]
0
[(total-fuel-used)]
0
end constructing
nSignificantTimePoint: 2
solving ...
end solving
constructing NGP
New Actions: 5
Old Actions: 5
Atoms: 2
[(fuel plane1)]
0
[(onboard plane1)]
0
[(total-fuel-used)]
0
end constructing
nSignificantTimePoint: 3
solving ...
============================[ Search Statistics ]==============================
| Conflicts |          ORIGINAL         |          LEARNT          | Progress |
|           |    Vars  Clauses Literals |    Limit  Clauses Lit/Cl |          |
===============================================================================
===============================================================================
OH yeay!, the problem is solved
end solving
1
[(at plane1 city0), 0]
(NOT [(at plane1 city1), 0])
(EQUAL [[(fuel plane1)], 0] (CONST_RATIONAL 4))
(EQUAL [[(onboard plane1)], 0] (CONST_RATIONAL 0))
(EQUAL [[(total-fuel-used)], 0] (CONST_RATIONAL 0))
(OR (NOT [(fly plane1 city0 city0), 0]) [(at plane1 city0), 1])
(OR (NOT [(fly plane1 city0 city0), 0]) (NOT [(at plane1 city0), 1]))
(OR (NOT [(fly plane1 city0 city0), 0]) (EQUAL [[(total-fuel-used)], 1] (PLUS [[(total-fuel-used)], 0] (MULT (CONST_RATIONAL 0) (CONST_RATIONAL 4)))))
(OR (NOT [(fly plane1 city0 city0), 0]) (EQUAL [[(fuel plane1)], 1] (MINUS [[(fuel plane1)], 0] (MULT (CONST_RATIONAL 0) (CONST_RATIONAL 4)))))
(OR (NOT [(fly plane1 city0 city0), 0]) [(at plane1 city0), 0])
(OR (NOT [(fly plane1 city0 city0), 0]) (GEQ [[(fuel plane1)], 0] (MULT (CONST_RATIONAL 0) (CONST_RATIONAL 4))))
(OR (NOT [(fly plane1 city0 city1), 0]) [(at plane1 city1), 1])
(OR (NOT [(fly plane1 city0 city1), 0]) (NOT [(at plane1 city0), 1]))
(OR (NOT [(fly plane1 city0 city1), 0]) (EQUAL [[(total-fuel-used)], 1] (PLUS [[(total-fuel-used)], 0] (MULT (CONST_RATIONAL 678) (CONST_RATIONAL 4)))))
(OR (NOT [(fly plane1 city0 city1), 0]) (EQUAL [[(fuel plane1)], 1] (MINUS [[(fuel plane1)], 0] (MULT (CONST_RATIONAL 678) (CONST_RATIONAL 4)))))
(OR (NOT [(fly plane1 city0 city1), 0]) [(at plane1 city0), 0])
(OR (NOT [(fly plane1 city0 city1), 0]) (GEQ [[(fuel plane1)], 0] (MULT (CONST_RATIONAL 678) (CONST_RATIONAL 4))))
(OR (NOT [(zoom plane1 city0 city0), 0]) [(at plane1 city0), 1])
(OR (NOT [(zoom plane1 city0 city0), 0]) (NOT [(at plane1 city0), 1]))
(OR (NOT [(zoom plane1 city0 city0), 0]) (EQUAL [[(total-fuel-used)], 1] (PLUS [[(total-fuel-used)], 0] (MULT (CONST_RATIONAL 0) (CONST_RATIONAL 15)))))
(OR (NOT [(zoom plane1 city0 city0), 0]) (EQUAL [[(fuel plane1)], 1] (MINUS [[(fuel plane1)], 0] (MULT (CONST_RATIONAL 0) (CONST_RATIONAL 15)))))
(OR (NOT [(zoom plane1 city0 city0), 0]) [(at plane1 city0), 0])
(OR (NOT [(zoom plane1 city0 city0), 0]) (GEQ [[(fuel plane1)], 0] (MULT (CONST_RATIONAL 0) (CONST_RATIONAL 15))))
(OR (NOT [(zoom plane1 city0 city0), 0]) (LEQ [[(onboard plane1)], 0] (CONST_RATIONAL 8)))
(OR (NOT [(zoom plane1 city0 city1), 0]) [(at plane1 city1), 1])
(OR (NOT [(zoom plane1 city0 city1), 0]) (NOT [(at plane1 city0), 1]))
(OR (NOT [(zoom plane1 city0 city1), 0]) (EQUAL [[(total-fuel-used)], 1] (PLUS [[(total-fuel-used)], 0] (MULT (CONST_RATIONAL 678) (CONST_RATIONAL 15)))))
(OR (NOT [(zoom plane1 city0 city1), 0]) (EQUAL [[(fuel plane1)], 1] (MINUS [[(fuel plane1)], 0] (MULT (CONST_RATIONAL 678) (CONST_RATIONAL 15)))))
(OR (NOT [(zoom plane1 city0 city1), 0]) [(at plane1 city0), 0])
(OR (NOT [(zoom plane1 city0 city1), 0]) (GEQ [[(fuel plane1)], 0] (MULT (CONST_RATIONAL 678) (CONST_RATIONAL 15))))
(OR (NOT [(zoom plane1 city0 city1), 0]) (LEQ [[(onboard plane1)], 0] (CONST_RATIONAL 8)))
(OR (NOT [(refuel plane1 city0), 0]) (EQUAL [[(fuel plane1)], 1] (CONST_RATIONAL 10232)))
(OR (NOT [(refuel plane1 city0), 0]) [(at plane1 city0), 0])
(OR (NOT [(fly plane1 city0 city0), 0]) (NOT [(fly plane1 city0 city1), 0]))
(OR (NOT [(fly plane1 city0 city0), 0]) (NOT [(zoom plane1 city0 city0), 0]))
(OR (NOT [(fly plane1 city0 city0), 0]) (NOT [(zoom plane1 city0 city1), 0]))
(OR (NOT [(fly plane1 city0 city0), 0]) (NOT [(refuel plane1 city0), 0]))
(OR (NOT [(fly plane1 city0 city1), 0]) (NOT [(zoom plane1 city0 city0), 0]))
(OR (NOT [(fly plane1 city0 city1), 0]) (NOT [(zoom plane1 city0 city1), 0]))
(OR (NOT [(fly plane1 city0 city1), 0]) (NOT [(refuel plane1 city0), 0]))
(OR (NOT [(zoom plane1 city0 city0), 0]) (NOT [(zoom plane1 city0 city1), 0]))
(OR (NOT [(zoom plane1 city0 city0), 0]) (NOT [(refuel plane1 city0), 0]))
(OR (NOT [(zoom plane1 city0 city1), 0]) (NOT [(refuel plane1 city0), 0]))
(OR (NOT [(at plane1 city0), 1]) [(at plane1 city0), 0] [(fly plane1 city0 city0), 0] [(zoom plane1 city0 city0), 0])
(OR (NOT [(at plane1 city1), 1]) [(at plane1 city1), 0] [(fly plane1 city0 city1), 0] [(zoom plane1 city0 city1), 0])
(OR [(at plane1 city0), 1] (NOT [(at plane1 city0), 0]) [(fly plane1 city0 city0), 0] [(fly plane1 city0 city1), 0] [(zoom plane1 city0 city0), 0] [(zoom plane1 city0 city1), 0])
(OR (DISTINCT [[(fuel plane1)], 1] (CONST_RATIONAL 0)) [(fly plane1 city0 city0), 0] [(fly plane1 city0 city1), 0] [(zoom plane1 city0 city0), 0] [(zoom plane1 city0 city1), 0] [(refuel plane1 city0), 0])
(DISTINCT [[(onboard plane1)], 1] (CONST_RATIONAL 1))
(OR (DISTINCT [[(total-fuel-used)], 1] (CONST_RATIONAL 2)) [(fly plane1 city0 city0), 0] [(fly plane1 city0 city1), 0] [(zoom plane1 city0 city0), 0] [(zoom plane1 city0 city1), 0])
(OR (NOT [(at plane1 city1), 1]) (NOT [(at plane1 city0), 1]))
(OR (NOT [(fly plane1 city0 city0), 1]) [(at plane1 city0), 2])
(OR (NOT [(fly plane1 city0 city0), 1]) (NOT [(at plane1 city0), 2]))
(OR (NOT [(fly plane1 city0 city0), 1]) (EQUAL [[(total-fuel-used)], 2] (PLUS [[(total-fuel-used)], 1] (MULT (CONST_RATIONAL 0) (CONST_RATIONAL 4)))))
(OR (NOT [(fly plane1 city0 city0), 1]) (EQUAL [[(fuel plane1)], 2] (MINUS [[(fuel plane1)], 1] (MULT (CONST_RATIONAL 0) (CONST_RATIONAL 4)))))
(OR (NOT [(fly plane1 city0 city0), 1]) [(at plane1 city0), 1])
(OR (NOT [(fly plane1 city0 city0), 1]) (GEQ [[(fuel plane1)], 1] (MULT (CONST_RATIONAL 0) (CONST_RATIONAL 4))))
(OR (NOT [(fly plane1 city1 city0), 1]) [(at plane1 city0), 2])
(OR (NOT [(fly plane1 city1 city0), 1]) (NOT [(at plane1 city1), 2]))
(OR (NOT [(fly plane1 city1 city0), 1]) (EQUAL [[(total-fuel-used)], 2] (PLUS [[(total-fuel-used)], 1] (MULT (CONST_RATIONAL 678) (CONST_RATIONAL 4)))))
(OR (NOT [(fly plane1 city1 city0), 1]) (EQUAL [[(fuel plane1)], 2] (MINUS [[(fuel plane1)], 1] (MULT (CONST_RATIONAL 678) (CONST_RATIONAL 4)))))
(OR (NOT [(fly plane1 city1 city0), 1]) [(at plane1 city1), 1])
(OR (NOT [(fly plane1 city1 city0), 1]) (GEQ [[(fuel plane1)], 1] (MULT (CONST_RATIONAL 678) (CONST_RATIONAL 4))))
(OR (NOT [(fly plane1 city0 city1), 1]) [(at plane1 city1), 2])
(OR (NOT [(fly plane1 city0 city1), 1]) (NOT [(at plane1 city0), 2]))
(OR (NOT [(fly plane1 city0 city1), 1]) (EQUAL [[(total-fuel-used)], 2] (PLUS [[(total-fuel-used)], 1] (MULT (CONST_RATIONAL 678) (CONST_RATIONAL 4)))))
(OR (NOT [(fly plane1 city0 city1), 1]) (EQUAL [[(fuel plane1)], 2] (MINUS [[(fuel plane1)], 1] (MULT (CONST_RATIONAL 678) (CONST_RATIONAL 4)))))
(OR (NOT [(fly plane1 city0 city1), 1]) [(at plane1 city0), 1])
(OR (NOT [(fly plane1 city0 city1), 1]) (GEQ [[(fuel plane1)], 1] (MULT (CONST_RATIONAL 678) (CONST_RATIONAL 4))))
(OR (NOT [(fly plane1 city1 city1), 1]) [(at plane1 city1), 2])
(OR (NOT [(fly plane1 city1 city1), 1]) (NOT [(at plane1 city1), 2]))
(OR (NOT [(fly plane1 city1 city1), 1]) (EQUAL [[(total-fuel-used)], 2] (PLUS [[(total-fuel-used)], 1] (MULT (CONST_RATIONAL 0) (CONST_RATIONAL 4)))))
(OR (NOT [(fly plane1 city1 city1), 1]) (EQUAL [[(fuel plane1)], 2] (MINUS [[(fuel plane1)], 1] (MULT (CONST_RATIONAL 0) (CONST_RATIONAL 4)))))
(OR (NOT [(fly plane1 city1 city1), 1]) [(at plane1 city1), 1])
(OR (NOT [(fly plane1 city1 city1), 1]) (GEQ [[(fuel plane1)], 1] (MULT (CONST_RATIONAL 0) (CONST_RATIONAL 4))))
(OR (NOT [(zoom plane1 city0 city0), 1]) [(at plane1 city0), 2])
(OR (NOT [(zoom plane1 city0 city0), 1]) (NOT [(at plane1 city0), 2]))
(OR (NOT [(zoom plane1 city0 city0), 1]) (EQUAL [[(total-fuel-used)], 2] (PLUS [[(total-fuel-used)], 1] (MULT (CONST_RATIONAL 0) (CONST_RATIONAL 15)))))
(OR (NOT [(zoom plane1 city0 city0), 1]) (EQUAL [[(fuel plane1)], 2] (MINUS [[(fuel plane1)], 1] (MULT (CONST_RATIONAL 0) (CONST_RATIONAL 15)))))
(OR (NOT [(zoom plane1 city0 city0), 1]) [(at plane1 city0), 1])
(OR (NOT [(zoom plane1 city0 city0), 1]) (GEQ [[(fuel plane1)], 1] (MULT (CONST_RATIONAL 0) (CONST_RATIONAL 15))))
(OR (NOT [(zoom plane1 city0 city0), 1]) (LEQ [[(onboard plane1)], 1] (CONST_RATIONAL 8)))
(OR (NOT [(zoom plane1 city1 city0), 1]) [(at plane1 city0), 2])
(OR (NOT [(zoom plane1 city1 city0), 1]) (NOT [(at plane1 city1), 2]))
(OR (NOT [(zoom plane1 city1 city0), 1]) (EQUAL [[(total-fuel-used)], 2] (PLUS [[(total-fuel-used)], 1] (MULT (CONST_RATIONAL 678) (CONST_RATIONAL 15)))))
(OR (NOT [(zoom plane1 city1 city0), 1]) (EQUAL [[(fuel plane1)], 2] (MINUS [[(fuel plane1)], 1] (MULT (CONST_RATIONAL 678) (CONST_RATIONAL 15)))))
(OR (NOT [(zoom plane1 city1 city0), 1]) [(at plane1 city1), 1])
(OR (NOT [(zoom plane1 city1 city0), 1]) (GEQ [[(fuel plane1)], 1] (MULT (CONST_RATIONAL 678) (CONST_RATIONAL 15))))
(OR (NOT [(zoom plane1 city1 city0), 1]) (LEQ [[(onboard plane1)], 1] (CONST_RATIONAL 8)))
(OR (NOT [(zoom plane1 city0 city1), 1]) [(at plane1 city1), 2])
(OR (NOT [(zoom plane1 city0 city1), 1]) (NOT [(at plane1 city0), 2]))
(OR (NOT [(zoom plane1 city0 city1), 1]) (EQUAL [[(total-fuel-used)], 2] (PLUS [[(total-fuel-used)], 1] (MULT (CONST_RATIONAL 678) (CONST_RATIONAL 15)))))
(OR (NOT [(zoom plane1 city0 city1), 1]) (EQUAL [[(fuel plane1)], 2] (MINUS [[(fuel plane1)], 1] (MULT (CONST_RATIONAL 678) (CONST_RATIONAL 15)))))
(OR (NOT [(zoom plane1 city0 city1), 1]) [(at plane1 city0), 1])
(OR (NOT [(zoom plane1 city0 city1), 1]) (GEQ [[(fuel plane1)], 1] (MULT (CONST_RATIONAL 678) (CONST_RATIONAL 15))))
(OR (NOT [(zoom plane1 city0 city1), 1]) (LEQ [[(onboard plane1)], 1] (CONST_RATIONAL 8)))
(OR (NOT [(zoom plane1 city1 city1), 1]) [(at plane1 city1), 2])
(OR (NOT [(zoom plane1 city1 city1), 1]) (NOT [(at plane1 city1), 2]))
(OR (NOT [(zoom plane1 city1 city1), 1]) (EQUAL [[(total-fuel-used)], 2] (PLUS [[(total-fuel-used)], 1] (MULT (CONST_RATIONAL 0) (CONST_RATIONAL 15)))))
(OR (NOT [(zoom plane1 city1 city1), 1]) (EQUAL [[(fuel plane1)], 2] (MINUS [[(fuel plane1)], 1] (MULT (CONST_RATIONAL 0) (CONST_RATIONAL 15)))))
(OR (NOT [(zoom plane1 city1 city1), 1]) [(at plane1 city1), 1])
(OR (NOT [(zoom plane1 city1 city1), 1]) (GEQ [[(fuel plane1)], 1] (MULT (CONST_RATIONAL 0) (CONST_RATIONAL 15))))
(OR (NOT [(zoom plane1 city1 city1), 1]) (LEQ [[(onboard plane1)], 1] (CONST_RATIONAL 8)))
(OR (NOT [(refuel plane1 city0), 1]) (EQUAL [[(fuel plane1)], 2] (CONST_RATIONAL 10232)))
(OR (NOT [(refuel plane1 city0), 1]) [(at plane1 city0), 1])
(OR (NOT [(refuel plane1 city1), 1]) (EQUAL [[(fuel plane1)], 2] (CONST_RATIONAL 10232)))
(OR (NOT [(refuel plane1 city1), 1]) [(at plane1 city1), 1])
(OR (NOT [(fly plane1 city0 city0), 1]) (NOT [(fly plane1 city1 city0), 1]))
(OR (NOT [(fly plane1 city0 city0), 1]) (NOT [(fly plane1 city0 city1), 1]))
(OR (NOT [(fly plane1 city0 city0), 1]) (NOT [(fly plane1 city1 city1), 1]))
(OR (NOT [(fly plane1 city0 city0), 1]) (NOT [(zoom plane1 city0 city0), 1]))
(OR (NOT [(fly plane1 city0 city0), 1]) (NOT [(zoom plane1 city1 city0), 1]))
(OR (NOT [(fly plane1 city0 city0), 1]) (NOT [(zoom plane1 city0 city1), 1]))
(OR (NOT [(fly plane1 city0 city0), 1]) (NOT [(zoom plane1 city1 city1), 1]))
(OR (NOT [(fly plane1 city0 city0), 1]) (NOT [(refuel plane1 city0), 1]))
(OR (NOT [(fly plane1 city0 city0), 1]) (NOT [(refuel plane1 city1), 1]))
(OR (NOT [(fly plane1 city1 city0), 1]) (NOT [(fly plane1 city0 city1), 1]))
(OR (NOT [(fly plane1 city1 city0), 1]) (NOT [(fly plane1 city1 city1), 1]))
(OR (NOT [(fly plane1 city1 city0), 1]) (NOT [(zoom plane1 city0 city0), 1]))
(OR (NOT [(fly plane1 city1 city0), 1]) (NOT [(zoom plane1 city1 city0), 1]))
(OR (NOT [(fly plane1 city1 city0), 1]) (NOT [(zoom plane1 city0 city1), 1]))
(OR (NOT [(fly plane1 city1 city0), 1]) (NOT [(zoom plane1 city1 city1), 1]))
(OR (NOT [(fly plane1 city1 city0), 1]) (NOT [(refuel plane1 city0), 1]))
(OR (NOT [(fly plane1 city1 city0), 1]) (NOT [(refuel plane1 city1), 1]))
(OR (NOT [(fly plane1 city0 city1), 1]) (NOT [(fly plane1 city1 city1), 1]))
(OR (NOT [(fly plane1 city0 city1), 1]) (NOT [(zoom plane1 city0 city0), 1]))
(OR (NOT [(fly plane1 city0 city1), 1]) (NOT [(zoom plane1 city1 city0), 1]))
(OR (NOT [(fly plane1 city0 city1), 1]) (NOT [(zoom plane1 city0 city1), 1]))
(OR (NOT [(fly plane1 city0 city1), 1]) (NOT [(zoom plane1 city1 city1), 1]))
(OR (NOT [(fly plane1 city0 city1), 1]) (NOT [(refuel plane1 city0), 1]))
(OR (NOT [(fly plane1 city0 city1), 1]) (NOT [(refuel plane1 city1), 1]))
(OR (NOT [(fly plane1 city1 city1), 1]) (NOT [(zoom plane1 city0 city0), 1]))
(OR (NOT [(fly plane1 city1 city1), 1]) (NOT [(zoom plane1 city1 city0), 1]))
(OR (NOT [(fly plane1 city1 city1), 1]) (NOT [(zoom plane1 city0 city1), 1]))
(OR (NOT [(fly plane1 city1 city1), 1]) (NOT [(zoom plane1 city1 city1), 1]))
(OR (NOT [(fly plane1 city1 city1), 1]) (NOT [(refuel plane1 city0), 1]))
(OR (NOT [(fly plane1 city1 city1), 1]) (NOT [(refuel plane1 city1), 1]))
(OR (NOT [(zoom plane1 city0 city0), 1]) (NOT [(zoom plane1 city1 city0), 1]))
(OR (NOT [(zoom plane1 city0 city0), 1]) (NOT [(zoom plane1 city0 city1), 1]))
(OR (NOT [(zoom plane1 city0 city0), 1]) (NOT [(zoom plane1 city1 city1), 1]))
(OR (NOT [(zoom plane1 city0 city0), 1]) (NOT [(refuel plane1 city0), 1]))
(OR (NOT [(zoom plane1 city0 city0), 1]) (NOT [(refuel plane1 city1), 1]))
(OR (NOT [(zoom plane1 city1 city0), 1]) (NOT [(zoom plane1 city0 city1), 1]))
(OR (NOT [(zoom plane1 city1 city0), 1]) (NOT [(zoom plane1 city1 city1), 1]))
(OR (NOT [(zoom plane1 city1 city0), 1]) (NOT [(refuel plane1 city0), 1]))
(OR (NOT [(zoom plane1 city1 city0), 1]) (NOT [(refuel plane1 city1), 1]))
(OR (NOT [(zoom plane1 city0 city1), 1]) (NOT [(zoom plane1 city1 city1), 1]))
(OR (NOT [(zoom plane1 city0 city1), 1]) (NOT [(refuel plane1 city0), 1]))
(OR (NOT [(zoom plane1 city0 city1), 1]) (NOT [(refuel plane1 city1), 1]))
(OR (NOT [(zoom plane1 city1 city1), 1]) (NOT [(refuel plane1 city0), 1]))
(OR (NOT [(zoom plane1 city1 city1), 1]) (NOT [(refuel plane1 city1), 1]))
(OR (NOT [(refuel plane1 city0), 1]) (NOT [(refuel plane1 city1), 1]))
(OR (NOT [(at plane1 city0), 2]) [(at plane1 city0), 1] [(fly plane1 city0 city0), 1] [(fly plane1 city1 city0), 1] [(zoom plane1 city0 city0), 1] [(zoom plane1 city1 city0), 1])
(OR (NOT [(at plane1 city1), 2]) [(at plane1 city1), 1] [(fly plane1 city0 city1), 1] [(fly plane1 city1 city1), 1] [(zoom plane1 city0 city1), 1] [(zoom plane1 city1 city1), 1])
(OR [(at plane1 city0), 2] (NOT [(at plane1 city0), 1]) [(fly plane1 city0 city0), 1] [(fly plane1 city0 city1), 1] [(zoom plane1 city0 city0), 1] [(zoom plane1 city0 city1), 1])
(OR [(at plane1 city1), 2] (NOT [(at plane1 city1), 1]) [(fly plane1 city1 city0), 1] [(fly plane1 city1 city1), 1] [(zoom plane1 city1 city0), 1] [(zoom plane1 city1 city1), 1])
(OR (EQUAL [[(fuel plane1)], 2] (CONST_RATIONAL 0)) [(fly plane1 city0 city0), 1] [(fly plane1 city1 city0), 1] [(fly plane1 city0 city1), 1] [(fly plane1 city1 city1), 1] [(zoom plane1 city0 city0), 1] [(zoom plane1 city1 city0), 1] [(zoom plane1 city0 city1), 1] [(zoom plane1 city1 city1), 1] [(refuel plane1 city0), 1] [(refuel plane1 city1), 1])
(EQUAL [[(onboard plane1)], 2] (CONST_RATIONAL 1))
(OR (EQUAL [[(total-fuel-used)], 2] (CONST_RATIONAL 2)) [(fly plane1 city0 city0), 1] [(fly plane1 city1 city0), 1] [(fly plane1 city0 city1), 1] [(fly plane1 city1 city1), 1] [(zoom plane1 city0 city0), 1] [(zoom plane1 city1 city0), 1] [(zoom plane1 city0 city1), 1] [(zoom plane1 city1 city1), 1])
(OR (NOT [(at plane1 city1), 2]) (NOT [(at plane1 city0), 2]))
[(at plane1 city1), 2]
The plan is: 
1: (zoom plane1 city0 city1)


Modaber finished his task!!! ;)
*******************************
